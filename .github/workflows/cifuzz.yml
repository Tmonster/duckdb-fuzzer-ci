name: CIFuzz
on:
  workflow_dispatch:
  schedule:
    - cron: "*/107 * * * *"

jobs:
  build-duckdb:
    name: Build DuckDB
    uses: ./.github/workflows/reusable_build.yml
    with:
      git_url: ${{ github.actor }}
      git_tag: ${{ github.ref_name }}
      timeout-minutes: 120

  get-key:
    name: Get FUZZEROFDUCKSKEY
    needs:
      - build-duckdb
    runs-on: ubuntu-latest
    outputs:
      FUZZEROFDUCKSKEY: ${{ steps.get-key.outputs.FUZZEROFDUCKSKEY }}
    steps:
      - id: get-key
        run: FUZZEROFDUCKSKEY=${{ secrets.FUZZEROFDUCKSKEY }} >> $GITHUB_OUTPUT
  fuzzer:
    name: Fuzzer
    needs:
    - build-duckdb
    - get-key
    strategy:
      fail-fast: false
      matrix:
        fuzzer: [duckfuzz, sqlsmith, duckfuzz_functions]
        data: [alltypes, tpch, emptyalltypes]
    uses: ./.github/workflows/reusable_fuzzer.yml
    with:
      fuzzer: ${{ matrix.fuzzer }}
      data: ${{ matrix.data }}
      timeout-minutes: 1
      dry: dry
      max_queries: 1
      FUZZEROFDUCKSKEY: ${{ needs.get-key.outputs.FUZZEROFDUCKSKEY }}
      DUCKDB_HASH: ${{ needs.build-duckdb.outputs.duckdb-hash }}

  check-issues:
    name: Check existing issues
    needs:
    - build-duckdb
    runs-on: ubuntu-latest
    env:
      FUZZEROFDUCKSKEY: ${{ needs.get-key.outputs.FUZZEROFDUCKSKEY }}
      DUCKDB_HASH: ${{ needs.build-duckdb.outputs.duckdb-hash }}

    steps:
      - uses: actions/checkout@v4
        with:
          repository: duckdb/duckdb_sqlsmith
          path: duckdb_sqlsmith
          sparse-checkout: |
            scripts

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: duckdb

      - name: Fuzz
        shell: bash
        run: |
            chmod +x duckdb
            cd duckdb_sqlsmith
            python3 scripts/run_fuzzer.py --duckfuzz --alltypes --shell=../duckdb
